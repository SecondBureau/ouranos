  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (61.5ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar(255) NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mPRAGMA index_list("schema_migrations")[0m
  [1m[35m (36.8ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.1ms)[0m  [1mSELECT "schema_migrations"."version" FROM "schema_migrations" [0m
Migrating to InitialAuthenticationTables (20110802031645)
  [1m[35m (0.3ms)[0m  CREATE TABLE "rorshack_authentication_authentications" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "account_id" integer, "provider" varchar(255), "access_token" varchar(255), "uid" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (0.2ms)[0m  [1mCREATE TABLE "rorshack_authentication_accounts" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar(255) NOT NULL, "user_id" integer, "crypted_password" varchar(128) DEFAULT '' NOT NULL, "password_salt" varchar(255) DEFAULT '' NOT NULL, "persistence_token" varchar(255), "perishable_token" varchar(255) DEFAULT '' NOT NULL, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.0ms)[0m  PRAGMA index_list("rorshack_authentication_authentications")
  [1m[36m (0.1ms)[0m  [1mCREATE INDEX "index_authentications_on_account_id" ON "rorshack_authentication_authentications" ("account_id")[0m
  [1m[35m (0.0ms)[0m  PRAGMA index_list("rorshack_authentication_accounts")
  [1m[36m (0.2ms)[0m  [1mCREATE UNIQUE INDEX "index_accounts_on_email" ON "rorshack_authentication_accounts" ("email")[0m
  [1m[35m (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ('20110802031645')
Migrating to CreateUsers (20110802032002)
  [1m[36m (0.4ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "nickname" varchar(255), "firstname" varchar(255), "lastname" varchar(255), "gender" varchar(255), "birthdate" date, "address" varchar(255), "zipcode" varchar(255), "city" varchar(255), "country" varchar(255) DEFAULT 'France', "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ('20110802032002')
Migrating to CreateRoles (20110802032017)
  [1m[36m (0.3ms)[0m  [1mCREATE TABLE "roles" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255), "is_default_role" boolean DEFAULT 'f' NOT NULL, "permissions" varchar(255), "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.2ms)[0m  ALTER TABLE "users" ADD "role_id" integer
  [1m[36m (0.0ms)[0m  [1mPRAGMA index_list("users")[0m
  [1m[35m (0.1ms)[0m  CREATE INDEX "index_users_on_role_id" ON "users" ("role_id")
  [1m[36m (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ('20110802032017')[0m
Migrating to CreateSettings (20110802034038)
  [1m[35m (0.2ms)[0m  CREATE TABLE "settings" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar(255), "value" varchar(255), "locale" varchar(255), "tooltip" varchar(255), "admin_only" boolean DEFAULT 'f' NOT NULL, "created_at" datetime, "updated_at" datetime) 
  [1m[36m (0.0ms)[0m  [1mPRAGMA index_list("settings")[0m
  [1m[35m (0.2ms)[0m  CREATE UNIQUE INDEX "index_settings_on_name_and_locale" ON "settings" ("name", "locale")
  [1m[36m (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ('20110802034038')[0m
Migrating to CreatePosts (20110802071705)
  [1m[35m (0.3ms)[0m  CREATE TABLE "posts" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "content" text, "post_type" varchar(255), "user_id" integer, "created_at" datetime, "updated_at" datetime) 
  [1m[36m (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ('20110802071705')[0m
Migrating to CreateComments (20110802154241)
  [1m[35m (0.3ms)[0m  CREATE TABLE "comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "content" text, "post_id" integer, "user_id" integer, "is_valid" integer, "created_at" datetime, "updated_at" datetime) 
  [1m[36m (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ('20110802154241')[0m
Migrating to CreateMessages (20110803135008)
  [1m[35m (0.3ms)[0m  CREATE TABLE "messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "firstname" varchar(255), "lastname" varchar(255), "email" varchar(255), "content" text, "user_id" integer, "created_at" datetime, "updated_at" datetime) 
  [1m[36m (0.0ms)[0m  [1mPRAGMA index_list("messages")[0m
  [1m[35m (0.1ms)[0m  CREATE INDEX "index_messages_on_user_id" ON "messages" ("user_id")
  [1m[36m (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ('20110803135008')[0m
Migrating to CreatePages (20110803140016)
  [1m[35m (0.3ms)[0m  CREATE TABLE "pages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar(255), "content" text, "permalink" varchar(255), "page_type" varchar(255), "created_at" datetime, "updated_at" datetime) 
  [1m[36m (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ('20110803140016')[0m
  [1m[35m (0.1ms)[0m  select sqlite_version(*)
  [1m[36m (0.1ms)[0m  [1mSELECT "schema_migrations"."version" FROM "schema_migrations" [0m
  [1m[35m (0.0ms)[0m  PRAGMA index_list("comments")
  [1m[36m (0.0ms)[0m  [1mPRAGMA index_list("messages")[0m
  [1m[35m (0.0ms)[0m  PRAGMA index_info('index_messages_on_user_id')
  [1m[36m (0.0ms)[0m  [1mPRAGMA index_list("pages")[0m
  [1m[35m (0.0ms)[0m  PRAGMA index_list("posts")
  [1m[36m (0.0ms)[0m  [1mPRAGMA index_list("roles")[0m
  [1m[35m (0.0ms)[0m  PRAGMA index_list("rorshack_authentication_accounts")
  [1m[36m (0.0ms)[0m  [1mPRAGMA index_info('index_accounts_on_email')[0m
  [1m[35m (0.0ms)[0m  PRAGMA index_list("rorshack_authentication_authentications")
  [1m[36m (0.0ms)[0m  [1mPRAGMA index_info('index_authentications_on_account_id')[0m
  [1m[35m (0.0ms)[0m  PRAGMA index_list("settings")
  [1m[36m (0.0ms)[0m  [1mPRAGMA index_info('index_settings_on_name_and_locale')[0m
  [1m[35m (0.0ms)[0m  PRAGMA index_list("users")
  [1m[36m (0.0ms)[0m  [1mPRAGMA index_info('index_users_on_role_id')[0m
  [1m[36m (0.1ms)[0m  [1mSELECT "schema_migrations"."version" FROM "schema_migrations" [0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'officers' LIMIT 1
  [1m[36mSQL (10.7ms)[0m  [1mINSERT INTO "roles" ("created_at", "is_default_role", "name", "permissions", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["is_default_role", false], ["name", "officers"], ["permissions", "--- \n:category: 31\n"], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00]]
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "roles" ("created_at", "is_default_role", "name", "permissions", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["is_default_role", false], ["name", "guests"], ["permissions", "--- \n:messages: 1\n:product: 2\n:category: 2\n"], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00]]
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'members' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "roles" ("created_at", "is_default_role", "name", "permissions", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["is_default_role", false], ["name", "members"], ["permissions", "--- \n:category: 31\n"], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00]]
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'users' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "roles" ("created_at", "is_default_role", "name", "permissions", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["is_default_role", true], ["name", "users"], ["permissions", "--- \n:messages: 3\n:product: 2\n:category: 2\n:user: 7\n"], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00]]
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'administrators' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "roles" ("created_at", "is_default_role", "name", "permissions", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["is_default_role", false], ["name", "administrators"], ["permissions", "--- \n:page: 31\n:message: 31\n:product: 31\n:image: 31\n:setting: 31\n:category: 31\n:role: 31\n:user: 31\n"], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00]]
  [1m[35mSQL (47.0ms)[0m  DELETE FROM "users"
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'officers' LIMIT 1[0m
  [1m[35mSQL (0.7ms)[0m  INSERT INTO "users" ("address", "birthdate", "city", "country", "created_at", "firstname", "gender", "lastname", "nickname", "role_id", "updated_at", "zipcode") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  [["address", "inconnue"], ["birthdate", Thu, 01 Jan 1970], ["city", "inconnu"], ["country", "France"], ["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["firstname", "offi"], ["gender", "M."], ["lastname", "cer"], ["nickname", "officer"], ["role_id", 1], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["zipcode", "inconnu"]]
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."id" = 1 LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'members' LIMIT 1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "users" ("address", "birthdate", "city", "country", "created_at", "firstname", "gender", "lastname", "nickname", "role_id", "updated_at", "zipcode") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)[0m  [["address", "inconnue"], ["birthdate", Thu, 01 Jan 1970], ["city", "inconnu"], ["country", "France"], ["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["firstname", "mem"], ["gender", "M."], ["lastname", "ber"], ["nickname", "member"], ["role_id", 3], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["zipcode", "inconnu"]]
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."id" = 3 LIMIT 1
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "users" ("address", "birthdate", "city", "country", "created_at", "firstname", "gender", "lastname", "nickname", "role_id", "updated_at", "zipcode") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  [["address", "inconnue"], ["birthdate", Thu, 01 Jan 1970], ["city", "inconnu"], ["country", "France"], ["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["firstname", "guest"], ["gender", "M."], ["lastname", "guest"], ["nickname", "guest"], ["role_id", 2], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["zipcode", "inconnu"]]
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."id" = 2 LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'users' LIMIT 1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "users" ("address", "birthdate", "city", "country", "created_at", "firstname", "gender", "lastname", "nickname", "role_id", "updated_at", "zipcode") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)[0m  [["address", "inconnue"], ["birthdate", Thu, 01 Jan 1970], ["city", "inconnu"], ["country", "France"], ["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["firstname", "Zhe"], ["gender", "M."], ["lastname", "Li"], ["nickname", "mark"], ["role_id", 4], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["zipcode", "inconnu"]]
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."id" = 4 LIMIT 1
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'users' LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "users" ("address", "birthdate", "city", "country", "created_at", "firstname", "gender", "lastname", "nickname", "role_id", "updated_at", "zipcode") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  [["address", "inconnue"], ["birthdate", Thu, 01 Jan 1970], ["city", "inconnu"], ["country", "France"], ["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["firstname", "Weihan"], ["gender", "M."], ["lastname", "Zhang"], ["nickname", "johnson"], ["role_id", 4], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["zipcode", "inconnu"]]
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."id" = 4 LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'administrators' LIMIT 1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "users" ("address", "birthdate", "city", "country", "created_at", "firstname", "gender", "lastname", "nickname", "role_id", "updated_at", "zipcode") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)[0m  [["address", "inconnue"], ["birthdate", Thu, 01 Jan 1970], ["city", "inconnue"], ["country", "France"], ["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["firstname", "Gilles"], ["gender", "M."], ["lastname", "Crofils"], ["nickname", "gilles"], ["role_id", 5], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["zipcode", "inconnu"]]
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."id" = 5 LIMIT 1
  [1m[36mRole Load (0.2ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'administrators' LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "users" ("address", "birthdate", "city", "country", "created_at", "firstname", "gender", "lastname", "nickname", "role_id", "updated_at", "zipcode") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  [["address", "inconnue"], ["birthdate", Thu, 01 Jan 1970], ["city", "inconnue"], ["country", "France"], ["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["firstname", "Amin"], ["gender", "M."], ["lastname", "Rafinejad"], ["nickname", "amin"], ["role_id", 5], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["zipcode", "inconnu"]]
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."id" = 5 LIMIT 1[0m
  [1m[35mRorshackAuthentication::Account Load (0.2ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."email" = 'guest@secondbureau.com' LIMIT 1
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'guest' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('guest@secondbureau.com') LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('guest@secondbureau.com') LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."persistence_token" = '81abf8bf8b18c5f1909348d70830a148531dcac64ff1988fb8b09c00921e178295825004db01ea1daf4cb47413220098def8926e382430118645842b541649f0' LIMIT 1
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "rorshack_authentication_accounts" ("created_at", "crypted_password", "email", "password_salt", "perishable_token", "persistence_token", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?, ?, ?)[0m  [["created_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["crypted_password", "51ab9566ad2955df145832ca2e6fe9590540b58b96c376dd6773d202900316d3349b141b6c7b69e60dfacc86bd84c924520fcd238079e391a4a9806eea8c3943"], ["email", "guest@secondbureau.com"], ["password_salt", "XmyAmZZvC0cibVAI70qL"], ["perishable_token", "vteSxBVjCJ7WlCbcDgnK"], ["persistence_token", "81abf8bf8b18c5f1909348d70830a148531dcac64ff1988fb8b09c00921e178295825004db01ea1daf4cb47413220098def8926e382430118645842b541649f0"], ["updated_at", Fri, 12 Aug 2011 11:23:31 CEST +02:00], ["user_id", 3]]
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = 3 LIMIT 1
  [1m[36mRorshackAuthentication::Account Load (0.1ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."email" = 'johnson@secondbureau.com' LIMIT 1[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."nickname" = 'johnson' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('johnson@secondbureau.com') LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('johnson@secondbureau.com') LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSELECT 1 FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."persistence_token" = '33682c913cb93f21df7e25da9507b0a3f047900f0296b223dabdb7d0d9bdd69915b94ca63c550a1ca0f636975a7a526b9a41bdac3cb828ffda0bae2436659be1' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "rorshack_authentication_accounts" ("created_at", "crypted_password", "email", "password_salt", "perishable_token", "persistence_token", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?, ?, ?)  [["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["crypted_password", "a85019885d7d08c020f6ccb785b312b03e086424b03c3024ed32ebb2ac411a75e23278387e8e87279f840760e90b60a90e688f98f88a563b028090f9c5c7b3f9"], ["email", "johnson@secondbureau.com"], ["password_salt", "UcIVnWyCj5VfvFfoY84"], ["perishable_token", "DcBH6Z1Oyr2q5qVzL4KO"], ["persistence_token", "33682c913cb93f21df7e25da9507b0a3f047900f0296b223dabdb7d0d9bdd69915b94ca63c550a1ca0f636975a7a526b9a41bdac3cb828ffda0bae2436659be1"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 5]]
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 5 LIMIT 1[0m
  [1m[35mRorshackAuthentication::Account Load (0.1ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."email" = 'mark@secondbureau.com' LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'mark' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('mark@secondbureau.com') LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('mark@secondbureau.com') LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."persistence_token" = '19db749dd70b703cca597e5277204e76a167d09272bc31b36c963bbd79dfd7993a818ffc138239777d2d51cdae8b0a0a7e0937a5ded02c10a92f0de87718950c' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "rorshack_authentication_accounts" ("created_at", "crypted_password", "email", "password_salt", "perishable_token", "persistence_token", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?, ?, ?)[0m  [["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["crypted_password", "8ac7d065814348ee7b7e73328f47d46e17a40f30d34588254496bc79ad364b6622ad99633dc4b71d6c6bf7842aaad8ff52ae8caf6b63a023a4ce7542867b880f"], ["email", "mark@secondbureau.com"], ["password_salt", "R1PhXK0pwZN2pXUGr3cc"], ["perishable_token", "d8NoLyCfAJ8CPx6lvQ5o"], ["persistence_token", "19db749dd70b703cca597e5277204e76a167d09272bc31b36c963bbd79dfd7993a818ffc138239777d2d51cdae8b0a0a7e0937a5ded02c10a92f0de87718950c"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 4]]
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = 4 LIMIT 1
  [1m[36mRorshackAuthentication::Account Load (0.2ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."email" = 'gilles@secondbureau.com' LIMIT 1[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('gilles@secondbureau.com') LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('gilles@secondbureau.com') LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSELECT 1 FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."persistence_token" = '4410b0f134074507125667c16d8de822a5644f1711dc37aa4cb88451c4638f222254a5767723c927a68af5db6b46d7cb5fcb7cf840b4e47f6be1ff69a9870bc1' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "rorshack_authentication_accounts" ("created_at", "crypted_password", "email", "password_salt", "perishable_token", "persistence_token", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?, ?, ?)  [["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["crypted_password", "b052e3a8936dcb48344bea8642b423af580331fb728ba32ab16c2e209bd4c77a62064026f78aeeb53093ee38a0e1edcdac5e0b5a08b419912647179a4b91f1c7"], ["email", "gilles@secondbureau.com"], ["password_salt", "T6uWM1KXFwZateUTcS3"], ["perishable_token", "gjZJHnu2CQjRsEM9F"], ["persistence_token", "4410b0f134074507125667c16d8de822a5644f1711dc37aa4cb88451c4638f222254a5767723c927a68af5db6b46d7cb5fcb7cf840b4e47f6be1ff69a9870bc1"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 6 LIMIT 1[0m
  [1m[35mRorshackAuthentication::Account Load (0.2ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."email" = 'member@secondbureau.com' LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'member' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('member@secondbureau.com') LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('member@secondbureau.com') LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."persistence_token" = '7803f8127bbfc75c4659dff807b5b06305c2968b4de30ebaec29f19afe5979d045371e3cf2966c6193cc0eb79ca035ced89e218957e7bf730c8bcc68a31628e5' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "rorshack_authentication_accounts" ("created_at", "crypted_password", "email", "password_salt", "perishable_token", "persistence_token", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?, ?, ?)[0m  [["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["crypted_password", "0b2e73544731ab75f7fa69f36435a4918b9d34f8ef1ec1102ccc27f44a5165a75cfac3724973e566c4f5f234621db38ef7dc5127a973940c93fc6c5dac4bf0d2"], ["email", "member@secondbureau.com"], ["password_salt", "MI8TLAX53qjA38myLzuW"], ["perishable_token", "9RcEdovrVfZipxi6P43a"], ["persistence_token", "7803f8127bbfc75c4659dff807b5b06305c2968b4de30ebaec29f19afe5979d045371e3cf2966c6193cc0eb79ca035ced89e218957e7bf730c8bcc68a31628e5"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 2]]
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = 2 LIMIT 1
  [1m[36mRorshackAuthentication::Account Load (0.2ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."email" = 'officer@secondbureau.com' LIMIT 1[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."nickname" = 'officer' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('officer@secondbureau.com') LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('officer@secondbureau.com') LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSELECT 1 FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."persistence_token" = '5fdfc772326a6fe8087ba848cb520df3e82371856a02f322433119f3c93d60a88f56b1095c232932464e362a18615555443dfb2a1c2778a4d154a492536f798d' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "rorshack_authentication_accounts" ("created_at", "crypted_password", "email", "password_salt", "perishable_token", "persistence_token", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?, ?, ?)  [["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["crypted_password", "9e2789a87e9bd91648ec5ce30e9f7ea31f6561ff872bb2a81335104b47f61655fb7e522b8b83a8dcf14634106547738a02b14ead7065bbce8f9f5b4b99d3f249"], ["email", "officer@secondbureau.com"], ["password_salt", "eHsX5AUu5WhRK388cm24"], ["perishable_token", "o475v8K4YwhppGfCbK"], ["persistence_token", "5fdfc772326a6fe8087ba848cb520df3e82371856a02f322433119f3c93d60a88f56b1095c232932464e362a18615555443dfb2a1c2778a4d154a492536f798d"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 1]]
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 1 LIMIT 1[0m
  [1m[35mRorshackAuthentication::Account Load (0.1ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."email" = 'amin@secondbureau.com' LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'amin' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('amin@secondbureau.com') LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSELECT 1 FROM "rorshack_authentication_accounts" WHERE LOWER("rorshack_authentication_accounts"."email") = LOWER('amin@secondbureau.com') LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SELECT 1 FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."persistence_token" = '7a412fadea88aa67b764723b5a62b98f61558d4bf4ffe76857ccbc5ba70b30f67d83680c90b54dc24e73377bbe5f04f9ac83b0b3115e36ed57f9b4f710cb2a41' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "rorshack_authentication_accounts" ("created_at", "crypted_password", "email", "password_salt", "perishable_token", "persistence_token", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?, ?, ?)[0m  [["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["crypted_password", "82bec2df83652a83d38c21435963f35780ac16724c50de91d70753f694180e2915f4cded7c6826e94654cdba62d64170c7509f7ec37a38cdd1ca5488dde05a48"], ["email", "amin@secondbureau.com"], ["password_salt", "lbdrEEvSgH8vxUUBd2s"], ["perishable_token", "fOjsvLzLdCXuLgCvMm"], ["persistence_token", "7a412fadea88aa67b764723b5a62b98f61558d4bf4ffe76857ccbc5ba70b30f67d83680c90b54dc24e73377bbe5f04f9ac83b0b3115e36ed57f9b4f710cb2a41"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 7]]
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = 7 LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", "public"], ["title", "test title 1sdfasdf"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", nil], ["title", "test title 15"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", "public"], ["title", "test title 1dfgdfgdfgdfgffffffffff"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", "public"], ["title", "test title 1sdfsdfsdf"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", "public"], ["title", "test title 1aaaaaaaaaaaaaaaaaa"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", "public"], ["title", "test title 113"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", "member"], ["title", "test title 17 for member"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", "public"], ["title", "test title 1sdfsdfsdf"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", nil], ["title", "test title 114"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", "public"], ["title", "test title 18"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", "public"], ["title", "test title 1dfgdfgdfgdfg"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (5.1ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["post_type", "public"], ["title", "test title 115"], ["updated_at", Fri, 12 Aug 2011 11:23:32 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 112"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 1sdfsdfasdf"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 116"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 1dhfghfgh"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 1sdf"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 16"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 1"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 1asdasd"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "member"], ["title", "test title 113123 for member"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 12"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 1dfgsdfg"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 1fghfgh"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "member"], ["title", "test title 13 for member"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 1fsdfgsdfg"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 1sdfsdf"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."nickname" = 'gilles' LIMIT 1[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "posts" ("content", "created_at", "post_type", "title", "updated_at", "user_id") VALUES (?, ?, ?, ?, ?, ?)  [["content", "Before DLR, we were classifying operations into two cases (not counting eval), bound during compilation and bound during run time. The goal for Phalanger as dynamic language compiler is to compile as much as possible as compile-time bound operations and use runtime-bound operations only for cases that can’t be determined during compilation. DLR caching system allows compiling operation at run time when we know particular types for the operation and store compiled operation into cache. This can work efficiently because of the idea that when particular operation occurs, there is a big chance that the next time operands will have the same type."], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["post_type", "public"], ["title", "test title 14"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["user_id", 6]]
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "pages" ("content", "created_at", "page_type", "permalink", "title", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["content", "content notice (just for members)"], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["page_type", "members"], ["permalink", "notice"], ["title", "notice"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00]]
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "pages" ("content", "created_at", "page_type", "permalink", "title", "updated_at") VALUES (?, ?, ?, ?, ?, ?)  [["content", "content contact (just for members)"], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["page_type", "members"], ["permalink", "contact"], ["title", "contact"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00]]
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "pages" ("content", "created_at", "page_type", "permalink", "title", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["content", "content about"], ["created_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00], ["page_type", "public"], ["permalink", "about"], ["title", "about"], ["updated_at", Fri, 12 Aug 2011 11:23:33 CEST +02:00]]


Started GET "/" for 127.0.0.1 at Fri Aug 12 17:24:07 +0800 2011
  Processing by PagesController#index as HTML
  [1m[36mRorshackAuthentication::Account Load (0.2ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 4 LIMIT 1[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 4 LIMIT 1
  [1m[36mRorshackAuthentication::Account Load (0.2ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."email" = 'guest@secondbureau.com' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  UPDATE "rorshack_authentication_accounts" SET "perishable_token" = 'EFzJVc0hLYfFDhABAigu', "updated_at" = '2011-08-12 09:24:07.293498' WHERE "rorshack_authentication_accounts"."id" = 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 3 LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."id" = 2 LIMIT 1
Rendered pages/index.html.haml within layouts/application (1.9ms)
  [1m[36mRole Load (0.2ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1[0m
Rendered site/_account.html.haml (88.0ms)
  [1m[35mPage Load (0.2ms)[0m  SELECT "pages".* FROM "pages" WHERE (page_type = 'public')
Rendered site/_header.html.haml (13.7ms)
Rendered site/_footer.html.haml (1.3ms)
Completed 200 OK in 482ms (Views: 135.3ms | ActiveRecord: 2.8ms)


Started GET "/assets/application.css" for 127.0.0.1 at Fri Aug 12 17:24:07 +0800 2011
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/application.css  (17ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/common.css.scss  (362ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/layout.css.scss  (143ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/users.css.scss  (2ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/pages.css.scss  (4ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/posts.css.scss  (20ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/managements.css.scss  (96ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/comments.css.scss  (10ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/messages.css.scss  (0ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/auth.css.scss  (7ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/message_dialog.css.scss  (113ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/application.css  (0ms)  (pid 24250)
Served asset /application.css - 200 OK (826ms)


Started GET "/assets/application.js" for 127.0.0.1 at Fri Aug 12 17:24:08 +0800 2011
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/javascripts/application.js  (13ms)  (pid 24250)
Compiled ~/.gems/gems/jquery-rails-1.0.13/vendor/assets/javascripts/jquery.js  (3ms)  (pid 24250)
Compiled ~/.gems/gems/jquery-rails-1.0.13/vendor/assets/javascripts/jquery_ujs.js  (0ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/javascripts/common.js  (0ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/javascripts/posts.js.coffee  (158ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/javascripts/comments.js.coffee  (0ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/javascripts/pages.js.coffee  (0ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/javascripts/messages.js.coffee  (0ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/javascripts/application.js  (0ms)  (pid 24250)
Served asset /application.js - 200 OK (311ms)


Started GET "/assets/icons/search128.png" for 127.0.0.1 at Fri Aug 12 17:24:08 +0800 2011
Served asset /icons/search128.png - 200 OK (3ms)


Started GET "/assets/flags/fr.png" for 127.0.0.1 at Fri Aug 12 17:24:08 +0800 2011
Served asset /flags/fr.png - 200 OK (2ms)


Started GET "/assets/flags/zh.png" for 127.0.0.1 at Fri Aug 12 17:24:08 +0800 2011
Served asset /flags/zh.png - 200 OK (3ms)


Started GET "/assets/flags/en.png" for 127.0.0.1 at Fri Aug 12 17:24:08 +0800 2011
Served asset /flags/en.png - 200 OK (3ms)


Started GET "/fr/posts" for 127.0.0.1 at Fri Aug 12 17:24:11 +0800 2011
  Processing by PostsController#index as HTML
  Parameters: {"locale"=>"fr"}
  [1m[36mRorshackAuthentication::Account Load (0.1ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 1 LIMIT 1[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 1 LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 3 LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."id" = 2 LIMIT 1
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1[0m
Rendered posts/_sidebar.html.haml (1.7ms)
  [1m[35mPost Load (0.4ms)[0m  SELECT "posts".* FROM "posts" WHERE (post_type = 'public') ORDER BY created_at, created_at DESC LIMIT 10 OFFSET 0
Rendered posts/_post_item.html.haml (10.8ms)
  [1m[36m (0.2ms)[0m  [1mSELECT COUNT(*) FROM "posts" WHERE (post_type = 'public')[0m
Rendered posts/index.html.haml within layouts/application (36.5ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1
Rendered site/_account.html.haml (84.5ms)
  [1m[36mPage Load (0.1ms)[0m  [1mSELECT "pages".* FROM "pages" WHERE (page_type = 'public')[0m
Rendered site/_header.html.haml (7.8ms)
Rendered site/_footer.html.haml (0.1ms)
Completed 200 OK in 397ms (Views: 138.6ms | ActiveRecord: 2.6ms)


Started GET "/assets/application.css" for 127.0.0.1 at Fri Aug 12 17:24:11 +0800 2011
Served asset /application.css - 200 OK (0ms)


Started GET "/assets/application.js" for 127.0.0.1 at Fri Aug 12 17:24:11 +0800 2011
Served asset /application.js - 200 OK (0ms)


Started GET "/assets/icons/search128.png" for 127.0.0.1 at Fri Aug 12 17:24:11 +0800 2011
Served asset /icons/search128.png - 200 OK (0ms)


Started GET "/assets/flags/fr.png" for 127.0.0.1 at Fri Aug 12 17:24:11 +0800 2011
Served asset /flags/fr.png - 200 OK (0ms)


Started GET "/assets/flags/zh.png" for 127.0.0.1 at Fri Aug 12 17:24:11 +0800 2011
Served asset /flags/zh.png - 200 OK (0ms)


Started GET "/assets/flags/en.png" for 127.0.0.1 at Fri Aug 12 17:24:11 +0800 2011
Served asset /flags/en.png - 200 OK (0ms)


Started GET "/iauth/login?locale=fr" for 127.0.0.1 at Fri Aug 12 17:24:12 +0800 2011
  Processing by RorshackAuthentication::AccountSessionsController#new as HTML
  Parameters: {"locale"=>"fr"}
  [1m[35mRorshackAuthentication::Account Load (0.1ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 1 LIMIT 1
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 1 LIMIT 1[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = 3 LIMIT 1
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."id" = 2 LIMIT 1[0m
  [1m[35mRole Load (0.2ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1
Rendered rorshack_authentication/account_sessions/_form.html.haml (8.0ms)
Rendered rorshack_authentication/account_sessions/new.html.haml within layouts/application (10.1ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1[0m
Rendered site/_account.html.haml (1.8ms)
  [1m[35mPage Load (0.1ms)[0m  SELECT "pages".* FROM "pages" WHERE (page_type = 'public')
Rendered site/_header.html.haml (7.4ms)
Rendered site/_footer.html.haml (0.1ms)
Completed 200 OK in 273ms (Views: 31.4ms | ActiveRecord: 2.3ms)


Started GET "/assets/application.css" for 127.0.0.1 at Fri Aug 12 17:24:12 +0800 2011
Served asset /application.css - 200 OK (0ms)


Started GET "/assets/application.js" for 127.0.0.1 at Fri Aug 12 17:24:12 +0800 2011
Served asset /application.js - 200 OK (0ms)


Started GET "/assets/icons/search128.png" for 127.0.0.1 at Fri Aug 12 17:24:12 +0800 2011
Served asset /icons/search128.png - 200 OK (0ms)


Started GET "/assets/flags/fr.png" for 127.0.0.1 at Fri Aug 12 17:24:12 +0800 2011
Served asset /flags/fr.png - 200 OK (0ms)


Started GET "/assets/flags/zh.png" for 127.0.0.1 at Fri Aug 12 17:24:12 +0800 2011
Served asset /flags/zh.png - 200 OK (0ms)


Started GET "/assets/flags/en.png" for 127.0.0.1 at Fri Aug 12 17:24:12 +0800 2011
Served asset /flags/en.png - 200 OK (0ms)


Started POST "/iauth/account_sessions?locale=fr" for 127.0.0.1 at Fri Aug 12 17:24:19 +0800 2011
  Processing by RorshackAuthentication::AccountSessionsController#create as HTML
  Parameters: {"commit"=>"Create Account session", "authenticity_token"=>"xd3rURf1/aRnIF5bEyNxWy1BNBk7aPfYfl8pziQ/Zzg=", "utf8"=>"✓", "rorshack_authentication_account_session"=>{"password"=>"[FILTERED]", "email"=>"mark@secondbureau.com"}, "locale"=>"fr"}
  [1m[36mRorshackAuthentication::Account Load (0.1ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 1 LIMIT 1[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 1 LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 3 LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."id" = 2 LIMIT 1
  [1m[36mRorshackAuthentication::Account Load (0.2ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE ("rorshack_authentication_accounts".email LIKE 'mark@secondbureau.com') LIMIT 1[0m
  [1m[35m (0.2ms)[0m  UPDATE "rorshack_authentication_accounts" SET "perishable_token" = '69sLCohNpAEKjmtMFNN', "updated_at" = '2011-08-12 09:24:19.695446' WHERE "rorshack_authentication_accounts"."id" = 3
Redirected to http://localhost:3008/iauth/login?locale=fr
Completed 302 Found in 219ms


Started GET "/iauth/login?locale=fr" for 127.0.0.1 at Fri Aug 12 17:24:19 +0800 2011
  Processing by RorshackAuthentication::AccountSessionsController#new as HTML
  Parameters: {"locale"=>"fr"}
  [1m[36mRorshackAuthentication::Account Load (0.1ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 4 LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."id" = 4 LIMIT 1
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1[0m
Redirected to http://localhost:3008/?locale=fr
Completed 302 Found in 158ms


Started GET "/?locale=fr" for 127.0.0.1 at Fri Aug 12 17:24:20 +0800 2011
  Processing by PagesController#index as HTML
  Parameters: {"locale"=>"fr"}
  [1m[35mRorshackAuthentication::Account Load (0.1ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = 4 LIMIT 1
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."id" = 4 LIMIT 1[0m
Rendered pages/index.html.haml within layouts/application (0.1ms)
  [1m[35mRole Load (0.2ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1
Rendered site/_account.html.haml (2.5ms)
  [1m[36mPage Load (0.1ms)[0m  [1mSELECT "pages".* FROM "pages" WHERE (page_type = 'public')[0m
Rendered site/_header.html.haml (7.0ms)
Rendered site/_footer.html.haml (0.1ms)
Completed 200 OK in 175ms (Views: 20.1ms | ActiveRecord: 1.8ms)


Started GET "/assets/application.css" for 127.0.0.1 at Fri Aug 12 17:24:20 +0800 2011
Served asset /application.css - 200 OK (0ms)


Started GET "/assets/application.js" for 127.0.0.1 at Fri Aug 12 17:24:20 +0800 2011
Served asset /application.js - 200 OK (0ms)


Started GET "/assets/icons/search128.png" for 127.0.0.1 at Fri Aug 12 17:24:20 +0800 2011
Served asset /icons/search128.png - 200 OK (0ms)


Started GET "/assets/flags/fr.png" for 127.0.0.1 at Fri Aug 12 17:24:20 +0800 2011
Served asset /flags/fr.png - 200 OK (0ms)


Started GET "/assets/flags/zh.png" for 127.0.0.1 at Fri Aug 12 17:24:20 +0800 2011
Served asset /flags/zh.png - 200 OK (0ms)


Started GET "/assets/flags/en.png" for 127.0.0.1 at Fri Aug 12 17:24:20 +0800 2011
Served asset /flags/en.png - 200 OK (0ms)


Started GET "/fr/posts" for 127.0.0.1 at Fri Aug 12 17:24:22 +0800 2011
  Processing by PostsController#index as HTML
  Parameters: {"locale"=>"fr"}
  [1m[35mRorshackAuthentication::Account Load (0.1ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = 4 LIMIT 1
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."id" = 4 LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1
Rendered posts/_sidebar.html.haml (0.7ms)
  [1m[36mPost Load (0.4ms)[0m  [1mSELECT "posts".* FROM "posts" ORDER BY created_at, created_at DESC LIMIT 10 OFFSET 0[0m
Rendered posts/_post_item.html.haml (9.4ms)
  [1m[35m (0.1ms)[0m  SELECT COUNT(*) FROM "posts" 
Rendered posts/index.html.haml within layouts/application (23.3ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1[0m
Rendered site/_account.html.haml (1.9ms)
  [1m[35mPage Load (0.2ms)[0m  SELECT "pages".* FROM "pages" WHERE (page_type = 'public')
Rendered site/_header.html.haml (8.6ms)
Rendered site/_footer.html.haml (0.2ms)
Completed 200 OK in 297ms (Views: 134.4ms | ActiveRecord: 6.6ms)


Started GET "/assets/application.css" for 127.0.0.1 at Fri Aug 12 17:24:23 +0800 2011
Served asset /application.css - 200 OK (1ms)


Started GET "/assets/application.js" for 127.0.0.1 at Fri Aug 12 17:24:23 +0800 2011
Served asset /application.js - 200 OK (0ms)


Started GET "/assets/icons/search128.png" for 127.0.0.1 at Fri Aug 12 17:24:23 +0800 2011
Served asset /icons/search128.png - 200 OK (0ms)


Started GET "/assets/flags/fr.png" for 127.0.0.1 at Fri Aug 12 17:24:23 +0800 2011
Served asset /flags/fr.png - 200 OK (0ms)


Started GET "/assets/flags/zh.png" for 127.0.0.1 at Fri Aug 12 17:24:23 +0800 2011
Served asset /flags/zh.png - 200 OK (0ms)


Started GET "/assets/flags/en.png" for 127.0.0.1 at Fri Aug 12 17:24:23 +0800 2011
Served asset /flags/en.png - 200 OK (0ms)


Started GET "/fr/posts/1" for 127.0.0.1 at Fri Aug 12 17:24:24 +0800 2011
  Processing by PostsController#show as HTML
  Parameters: {"id"=>"1", "locale"=>"fr"}
  [1m[36mRorshackAuthentication::Account Load (0.1ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 4 LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."id" = 4 LIMIT 1
  [1m[36mPost Load (0.2ms)[0m  [1mSELECT "posts".* FROM "posts" WHERE "posts"."id" = ? ORDER BY created_at LIMIT 1[0m  [["id", "1"]]
  [1m[35m (0.1ms)[0m  SELECT COUNT(*) FROM "comments" WHERE "comments"."post_id" = 1 AND (is_valid = 1)
  [1m[36m (0.1ms)[0m  [1mSELECT COUNT(*) FROM "comments" WHERE "comments"."post_id" = 1 AND (user_id = 4 and is_valid = 0)[0m
Rendered posts/_sidebar.html.haml (0.7ms)
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = 6 LIMIT 1
Rendered comments/_form.html.haml (5.0ms)
  [1m[36mRole Load (0.2ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'users' LIMIT 1
  [1m[36mComment Load (0.1ms)[0m  [1mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = 1 AND (is_valid = 1) ORDER BY created_at DESC[0m
Rendered posts/_comment_list.html.haml (3.0ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1
Rendered posts/show.html.haml within layouts/application (25.9ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1[0m
Rendered site/_account.html.haml (1.6ms)
  [1m[35mPage Load (0.1ms)[0m  SELECT "pages".* FROM "pages" WHERE (page_type = 'public')
Rendered site/_header.html.haml (7.2ms)
Rendered site/_footer.html.haml (0.1ms)
Completed 200 OK in 328ms (Views: 44.3ms | ActiveRecord: 3.3ms)


Started GET "/assets/application.css" for 127.0.0.1 at Fri Aug 12 17:24:24 +0800 2011
Served asset /application.css - 200 OK (1ms)


Started GET "/assets/application.js" for 127.0.0.1 at Fri Aug 12 17:24:24 +0800 2011
Served asset /application.js - 200 OK (0ms)


Started GET "/assets/icons/printer.png" for 127.0.0.1 at Fri Aug 12 17:24:24 +0800 2011
Served asset /icons/printer.png - 200 OK (3ms)


Started GET "/assets/icons/pdf.png" for 127.0.0.1 at Fri Aug 12 17:24:24 +0800 2011
Served asset /icons/pdf.png - 200 OK (3ms)


Started GET "/assets/icons/search128.png" for 127.0.0.1 at Fri Aug 12 17:24:24 +0800 2011
Served asset /icons/search128.png - 200 OK (0ms)


Started GET "/assets/flags/fr.png" for 127.0.0.1 at Fri Aug 12 17:24:24 +0800 2011
Served asset /flags/fr.png - 200 OK (0ms)


Started GET "/assets/flags/zh.png" for 127.0.0.1 at Fri Aug 12 17:24:24 +0800 2011
Served asset /flags/zh.png - 200 OK (0ms)


Started GET "/assets/flags/en.png" for 127.0.0.1 at Fri Aug 12 17:24:24 +0800 2011
Served asset /flags/en.png - 200 OK (0ms)


Started GET "/fr/posts/print/1" for 127.0.0.1 at Fri Aug 12 17:24:26 +0800 2011
  Processing by PostsController#print as HTML
  Parameters: {"id"=>"1", "locale"=>"fr"}
  [1m[36mRorshackAuthentication::Account Load (0.1ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 4 LIMIT 1[0m
  [1m[35mRole Load (0.2ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."id" = 4 LIMIT 1
  [1m[36mPost Load (0.1ms)[0m  [1mSELECT "posts".* FROM "posts" WHERE "posts"."id" = ? ORDER BY created_at LIMIT 1[0m  [["id", "1"]]
Rendered posts/print.html.haml (12.0ms)
Completed 200 OK in 295ms (Views: 17.4ms | ActiveRecord: 1.9ms)


Started GET "/assets/printSetup.css" for 127.0.0.1 at Fri Aug 12 17:24:26 +0800 2011
Error compiling asset printSetup.css:
Sass::SyntaxError: File to import not found or unreadable: print_common.
Load path: /home/mark/workspace/secondbureau/ouranos_heroku/demo-ouranos
  (in /home/mark/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/printSetup.css.scss)
Served asset /printSetup.css - 500 Internal Server Error



Started GET "/assets/print.css" for 127.0.0.1 at Fri Aug 12 17:24:26 +0800 2011
Error compiling asset print.css:
Sass::SyntaxError: File to import not found or unreadable: print_common.
Load path: /home/mark/workspace/secondbureau/ouranos_heroku/demo-ouranos
  (in /home/mark/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/print.css.scss)
Served asset /print.css - 500 Internal Server Error



Started GET "/assets/print.js" for 127.0.0.1 at Fri Aug 12 17:24:26 +0800 2011
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/javascripts/print.js.coffee  (7ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/javascripts/print.js.coffee  (0ms)  (pid 24250)
Served asset /print.js - 200 OK (14ms)


Started GET "/assets/icons/pdf_32.png" for 127.0.0.1 at Fri Aug 12 17:24:26 +0800 2011
Served asset /icons/pdf_32.png - 200 OK (3ms)


Started GET "/assets/second_bureau_332.png" for 127.0.0.1 at Fri Aug 12 17:24:26 +0800 2011
Served asset /second_bureau_332.png - 200 OK (2ms)


Started GET "/assets/icons/printer_32.png" for 127.0.0.1 at Fri Aug 12 17:24:26 +0800 2011
Served asset /icons/printer_32.png - 200 OK (2ms)


Started GET "/fr/posts/1" for 127.0.0.1 at Fri Aug 12 17:25:32 +0800 2011
  Processing by PostsController#show as HTML
  Parameters: {"id"=>"1", "locale"=>"fr"}
  [1m[35mRorshackAuthentication::Account Load (0.2ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = 4 LIMIT 1
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."id" = 4 LIMIT 1[0m
  [1m[35mPost Load (0.1ms)[0m  SELECT "posts".* FROM "posts" WHERE "posts"."id" = ? ORDER BY created_at LIMIT 1  [["id", "1"]]
  [1m[36m (0.2ms)[0m  [1mSELECT COUNT(*) FROM "comments" WHERE "comments"."post_id" = 1 AND (is_valid = 1)[0m
  [1m[35m (0.1ms)[0m  SELECT COUNT(*) FROM "comments" WHERE "comments"."post_id" = 1 AND (user_id = 4 and is_valid = 0)
Rendered posts/_sidebar.html.haml (0.7ms)
  [1m[36mUser Load (0.2ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 6 LIMIT 1[0m
Rendered comments/_form.html.haml (4.2ms)
  [1m[35mRole Load (0.2ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'users' LIMIT 1[0m
  [1m[35mComment Load (0.1ms)[0m  SELECT "comments".* FROM "comments" WHERE "comments"."post_id" = 1 AND (is_valid = 1) ORDER BY created_at DESC
Rendered posts/_comment_list.html.haml (0.5ms)
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1[0m
Rendered posts/show.html.haml within layouts/application (15.3ms)
  [1m[35mCACHE (0.0ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."name" = 'guests' LIMIT 1
Rendered site/_account.html.haml (1.8ms)
  [1m[36mPage Load (0.1ms)[0m  [1mSELECT "pages".* FROM "pages" WHERE (page_type = 'public')[0m
Rendered site/_header.html.haml (8.5ms)
Rendered site/_footer.html.haml (0.1ms)
Completed 200 OK in 330ms (Views: 35.8ms | ActiveRecord: 3.4ms)


Started GET "/assets/application.css" for 127.0.0.1 at Fri Aug 12 17:25:33 +0800 2011
Served asset /application.css - 200 OK (0ms)


Started GET "/assets/application.js" for 127.0.0.1 at Fri Aug 12 17:25:33 +0800 2011
Served asset /application.js - 200 OK (0ms)


Started GET "/assets/icons/search128.png" for 127.0.0.1 at Fri Aug 12 17:25:33 +0800 2011
Served asset /icons/search128.png - 200 OK (0ms)


Started GET "/assets/flags/fr.png" for 127.0.0.1 at Fri Aug 12 17:25:33 +0800 2011
Served asset /flags/fr.png - 200 OK (0ms)


Started GET "/assets/flags/zh.png" for 127.0.0.1 at Fri Aug 12 17:25:33 +0800 2011
Served asset /flags/zh.png - 200 OK (0ms)


Started GET "/assets/flags/en.png" for 127.0.0.1 at Fri Aug 12 17:25:33 +0800 2011
Served asset /flags/en.png - 200 OK (0ms)


Started GET "/assets/icons/printer.png" for 127.0.0.1 at Fri Aug 12 17:25:33 +0800 2011
Served asset /icons/printer.png - 200 OK (0ms)


Started GET "/assets/icons/pdf.png" for 127.0.0.1 at Fri Aug 12 17:25:33 +0800 2011
Served asset /icons/pdf.png - 200 OK (0ms)


Started GET "/fr/posts/print/1" for 127.0.0.1 at Fri Aug 12 17:25:34 +0800 2011
  Processing by PostsController#print as HTML
  Parameters: {"id"=>"1", "locale"=>"fr"}
  [1m[35mRorshackAuthentication::Account Load (0.1ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1[0m
  [1m[35mUser Load (0.1ms)[0m  SELECT "users".* FROM "users" WHERE "users"."id" = 4 LIMIT 1
  [1m[36mRole Load (0.1ms)[0m  [1mSELECT "roles".* FROM "roles" WHERE "roles"."id" = 4 LIMIT 1[0m
  [1m[35mPost Load (0.1ms)[0m  SELECT "posts".* FROM "posts" WHERE "posts"."id" = ? ORDER BY created_at LIMIT 1  [["id", "1"]]
Rendered posts/print.html.haml (6.1ms)
Completed 200 OK in 175ms (Views: 11.3ms | ActiveRecord: 1.8ms)


Started GET "/assets/printSetup.css" for 127.0.0.1 at Fri Aug 12 17:25:35 +0800 2011
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/printSetup.css.scss  (15ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/printSetup.css.scss  (0ms)  (pid 24250)
Served asset /printSetup.css - 200 OK (24ms)


Started GET "/assets/print.css" for 127.0.0.1 at Fri Aug 12 17:25:35 +0800 2011
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/print.css.scss  (105ms)  (pid 24250)
Compiled ~/workspace/secondbureau/ouranos_heroku/demo-ouranos/app/assets/stylesheets/print.css.scss  (0ms)  (pid 24250)
Served asset /print.css - 200 OK (111ms)


Started GET "/assets/print.js" for 127.0.0.1 at Fri Aug 12 17:25:35 +0800 2011
Served asset /print.js - 200 OK (0ms)


Started GET "/assets/icons/printer_32.png" for 127.0.0.1 at Fri Aug 12 17:25:35 +0800 2011
Served asset /icons/printer_32.png - 200 OK (0ms)


Started GET "/assets/icons/pdf_32.png" for 127.0.0.1 at Fri Aug 12 17:25:35 +0800 2011
Served asset /icons/pdf_32.png - 200 OK (0ms)


Started GET "/assets/second_bureau_332.png" for 127.0.0.1 at Fri Aug 12 17:25:35 +0800 2011
Served asset /second_bureau_332.png - 200 OK (0ms)


Started GET "/fr/posts/print/1" for 127.0.0.1 at Fri Aug 12 17:25:39 +0800 2011
  Processing by PostsController#print as HTML
  Parameters: {"id"=>"1", "locale"=>"fr"}
  [1m[36mRorshackAuthentication::Account Load (0.1ms)[0m  [1mSELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "rorshack_authentication_accounts".* FROM "rorshack_authentication_accounts" WHERE "rorshack_authentication_accounts"."id" = 3 LIMIT 1
  [1m[36mUser Load (0.1ms)[0m  [1mSELECT "users".* FROM "users" WHERE "users"."id" = 4 LIMIT 1[0m
  [1m[35mRole Load (0.1ms)[0m  SELECT "roles".* FROM "roles" WHERE "roles"."id" = 4 LIMIT 1
  [1m[36mPost Load (0.1ms)[0m  [1mSELECT "posts".* FROM "posts" WHERE "posts"."id" = ? ORDER BY created_at LIMIT 1[0m  [["id", "1"]]
Rendered posts/print.html.haml (6.5ms)
Completed 200 OK in 274ms (Views: 12.2ms | ActiveRecord: 1.8ms)


Started GET "/assets/printSetup.css" for 127.0.0.1 at Fri Aug 12 17:25:40 +0800 2011
Served asset /printSetup.css - 200 OK (0ms)


Started GET "/assets/print.css" for 127.0.0.1 at Fri Aug 12 17:25:40 +0800 2011
Served asset /print.css - 200 OK (0ms)


Started GET "/assets/print.js" for 127.0.0.1 at Fri Aug 12 17:25:40 +0800 2011
Served asset /print.js - 200 OK (0ms)


Started GET "/assets/icons/printer_32.png" for 127.0.0.1 at Fri Aug 12 17:25:40 +0800 2011
Served asset /icons/printer_32.png - 200 OK (0ms)


Started GET "/assets/icons/pdf_32.png" for 127.0.0.1 at Fri Aug 12 17:25:40 +0800 2011
Served asset /icons/pdf_32.png - 200 OK (0ms)


Started GET "/assets/second_bureau_332.png" for 127.0.0.1 at Fri Aug 12 17:25:40 +0800 2011
Served asset /second_bureau_332.png - 200 OK (0ms)
